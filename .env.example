# Setup Agent Configuration
# Copy this file to .env and fill in your values

# =============================================================================
# LLM Configuration
# =============================================================================

# Primary thinking model (for complex reasoning tasks)
SAG_THINKING_MODEL=o4-mini
SAG_THINKING_PROVIDER=openai

# Action model (for tool usage and quick responses)  
SAG_ACTION_MODEL=gpt-4o
SAG_ACTION_PROVIDER=openai

# =============================================================================
# OpenAI Configuration
# =============================================================================
OPENAI_API_KEY=sk-your-openai-key-here
OPENAI_BASE_URL=https://api.openai.com/v1

# =============================================================================
# Anthropic Configuration
# =============================================================================
ANTHROPIC_API_KEY=sk-ant-your-anthropic-key-here

# =============================================================================
# Other Providers (via LiteLLM)
# =============================================================================

# Groq
GROQ_API_KEY=gsk_your-groq-key-here

# Ollama (local)
OLLAMA_BASE_URL=http://localhost:11434

# Azure OpenAI
AZURE_API_KEY=your-azure-key-here
AZURE_API_BASE=https://your-resource.openai.azure.com/
AZURE_API_VERSION=2023-12-01-preview

# Google (VertexAI/Gemini)
GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account.json

# =============================================================================
# System Configuration
# =============================================================================

# Logging Configuration
# Logging Configuration
# Available levels: DEBUG, INFO, WARNING, ERROR
SAG_LOG_LEVEL=INFO

# Enable verbose debugging with detailed logs and LiteLLM internals (true/false)
SAG_VERBOSE=false

# Log file rotation and retention settings
SAG_LOG_ROTATION=50 MB
SAG_LOG_RETENTION=30 days

# Docker Configuration
SAG_DOCKER_BASE_IMAGE=ubuntu:22.04
SAG_WORKSPACE_PATH=/workspace

# Agent behavior
SAG_MAX_ITERATIONS=50
SAG_CONTEXT_SWITCH_THRESHOLD=20

# =============================================================================
# Advanced Settings
# =============================================================================

# Temperature settings
SAG_THINKING_TEMPERATURE=0.1
SAG_ACTION_TEMPERATURE=0.3

# Token limits
SAG_MAX_THINKING_TOKENS=8000
SAG_MAX_ACTION_TOKENS=2000

# Reasoning effort for OpenAI o1 models (low/medium/high)
SAG_REASONING_EFFORT=medium

# =============================================================================
# Verbose Mode Details
# =============================================================================
# When SAG_VERBOSE=true, the following additional features are enabled:
#
# 1. Console Output:
#    - Shows detailed timestamps with milliseconds
#    - Displays function names and line numbers
#    - Includes DEBUG and TRACE level messages
#
# 2. File Logging:
#    - Creates session-specific log directories with timestamps
#    - Generates specialized log files:
#      * main.log - Complete execution trace
#      * agent_execution.log - Agent decision processes
#      * debug_verbose.log - Detailed debugging including LiteLLM calls
#      * errors.log - Error-only log for quick debugging
#      * command_[cmd]_[project].log - Per-command execution logs
#
# 3. LiteLLM Integration:
#    - Enables LiteLLM's verbose logging
#    - Shows detailed API calls and responses
#    - Logs model selection and routing decisions
#
# 4. Session Management:
#    - Each SAG execution gets a unique session ID
#    - All logs are organized under logs/session_YYYYMMDD_HHMMSS/
#    - Session summary available via logging API
#
# Usage Examples:
#   sag --verbose project https://github.com/user/repo.git
#   sag --verbose run sag-myproject --task "add tests"
#   SAG_VERBOSE=true sag project https://github.com/user/repo.git